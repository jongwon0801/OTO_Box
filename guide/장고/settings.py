# /home/pi/Workspace/newapp/appleapp/settings.py

"""
Django settings for appleapp project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_7b@6le^9fpne0jwnn4i2wbww3#-l#ncff$n^l#o$!oq&ysd^l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'applebox',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'markdown_deux',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'appleapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'appleapp.wsgi.application'


#from markdown_deux.conf.settings import MARKDOWN_DEUX_DEFAULT_STYLE
#import re
MARKDOWN_DEUX_STYLES = {
    "default": {
        "extras": {
            "code-friendly": None,
            "code-color": None,
            "pyshell": None,
            "demote-headers": 3,
            # `class` attribute put on `pre` tags to enable using
            # <http://code.google.com/p/google-code-prettify/> for syntax
            # highlighting.
            "html-classes": {"pre": "prettyprint"},
            "cuddled-lists": None,
            "footnotes": None,
            "header-ids": None,
            "fenced-code-blocks":None,
            "tables":None,

        },
        "safe_mode": False,
    },
}

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'swagger'),
    os.path.join(BASE_DIR, 'electron'),
    os.path.join(BASE_DIR, 'manage'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_statics')
'''
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters':{
        'hc' : {
            #'format': '%(asctime)s %(levelname)s %(name)s\n%(message)s'
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(module)s : %(lineno)d - %(message)s',
            'datefmt':'%Y-%m-%d %H:%M:%S'
        },

    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'default':{
            'level':'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/logfile'),
            'formatter': 'hc',
            'maxBytes': 1024 * 1024 * 1,  # 1MB
            'backupCount': 5,
        },
        #'applebox':{
        #    'level':'INFO',
        #    'class': 'logging.handlers.RotatingFileHandler',
        #    'filename': os.path.join(BASE_DIR, 'logs/applebox'),
        #    'formatter': 'hc',
        #    'maxBytes': 1024 * 1024 * 1,  # 1MB
        #    'backupCount': 5,
        #},
    },
    'loggers': {
        'django': {
            'handlers': ['console','default'],
            'level': 'INFO',
        },
        'django.request':
        {
            'handlers':
                ['default'],
            'level':
                'INFO',
            'propagate':
                False,
        },

    },
}
'''
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
        'verbose': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt':'%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'default': {
            'level':'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/django.log'),
            #'when': 'midnight', # this specifies the interval
            'when': 'W0',
            'interval': 1, # defaults to 1, only necessary for other values

            #'backupCount': 10, # how many backup file to keep, 10 days
            'formatter': 'verbose',
        },


    },

    'loggers': {
        'django': {
            'handlers': ['console','default'],
            'level': 'INFO',
        },

    }
}
VERSION=1
#LOCKER_URL='https://smart.zimcarry.net'
LOCKER_URL='http://server'
JWTPWD='ilovescotchyscotch'
#JWTPWD='ilovezimcarry'

ATOKEN='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZW1iZXJTcSI6MTE5LCJocCI6IjAxMDY4MTE1MjI4IiwibmFtZSI6Iu2ZjeyEseyyoCIsIm1lZGlhIjoiQSIsImlhdCI6MTQ3MDAzNTM4M30.xNh_2_caz32PZsJp98eYsl93zStOBWXUYldw3PTu09I'

CORS_ORIGIN_ALLOW_ALL=True
CORS_ALLOW_CREDENTIALS=True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)
CORS_ORIGIN_WHITELIST = (
    #'google.com',
    #'hostname.example.com',
    #'localhost:8000',
    #'localhost:4200',
    #'smart.zimcarry.net',
    #'127.0.0.1:9000',
    #'*'
)
